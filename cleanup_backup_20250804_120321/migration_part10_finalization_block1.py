#!/usr/bin/env python3
"""üéØ –ú–∏–≥—Ä–∞—Ü–∏—è Part 10A - –ë–∞–∑–æ–≤–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"""
import logging
from pathlib import Path
from datetime import datetime

class Migration:
    """üéØ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
    
    def __init__(self, project_root: Path):
        self.project_root = project_root
        self.logger = logging.getLogger(__name__)
    
    def execute(self) -> bool:
        """üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
        try:
            self.logger.info("üéØ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
            
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
            self._create_main_documentation()
            
            # –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            self._create_configuration_guide()
            
            self.logger.info("‚úÖ –ë–∞–∑–æ–≤–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {e}")
            return False
    
    def _create_main_documentation(self):
        """üìö –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
        docs_dir = self.project_root / "docs"
        docs_dir.mkdir(exist_ok=True)
        
        # –ì–ª–∞–≤–Ω—ã–π README
        readme_content = '''# ü§ñ DOGE Trading Bot v4.1-refactored

–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã DOGE —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π.

## üåü –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- ‚úÖ **Clean Architecture** - —á–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ **Dependency Injection** - —Å–ª–∞–±–∞—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- ‚úÖ **–ü–æ–ª–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è** - type hints –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- ‚úÖ **–ü—Ä–æ—Ñ–∏–ª–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏** - –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π
- ‚úÖ **DCA —Å—Ç—Ä–∞—Ç–µ–≥–∏—è** - —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏ –ø—Ä–æ—Å–∞–¥–∫–∞—Ö
- ‚úÖ **–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç** - –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏
- ‚úÖ **–û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å** - –∞–¥–∞–ø—Ç–µ—Ä—ã –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
- ‚úÖ **–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** - unit, integration, performance —Ç–µ—Å—Ç—ã

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
git clone <repository_url>
cd doge-trading-bot

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -r requirements.txt
```

### 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
cp .env.example .env

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
nano .env
```

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env:**
```env
# API –∫–ª—é—á–∏ EXMO
EXMO_API_KEY=your_api_key_here
EXMO_API_SECRET=your_api_secret_here

# –ü—Ä–æ—Ñ–∏–ª—å —Ç–æ—Ä–≥–æ–≤–ª–∏
TRADING_PROFILE=balanced  # conservative, balanced, aggressive

# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
TRADING_MODE=paper        # paper, live
```

### 3. –ó–∞–ø—É—Å–∫

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
python main.py --validate

# –ó–∞–ø—É—Å–∫ –≤ paper trading —Ä–µ–∂–∏–º–µ
python main.py --mode paper

# –ó–∞–ø—É—Å–∫ –≤ –≥–∏–±—Ä–∏–¥–Ω–æ–º —Ä–µ–∂–∏–º–µ
python main.py --mode hybrid

# –ó–∞–ø—É—Å–∫ –≤ legacy —Ä–µ–∂–∏–º–µ
python main.py --mode legacy
```

## üìä –ü—Ä–æ—Ñ–∏–ª–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏

| –ü—Ä–æ—Ñ–∏–ª—å | –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ | –°—Ç–æ–ø-–ª–æ—Å—Å | Take-profit | DCA —à–∞–≥–∏ | –†–∏—Å–∫ |
|---------|---------------|-----------|-------------|----------|------|
| **Conservative** | 4% | 10% | 15% | 3 | –ù–∏–∑–∫–∏–π |
| **Balanced** | 6% | 15% | 25% | 5 | –°—Ä–µ–¥–Ω–∏–π |
| **Aggressive** | 10% | 20% | 35% | 7 | –í—ã—Å–æ–∫–∏–π |

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

```bash
# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
pytest

# Unit —Ç–µ—Å—Ç—ã
pytest -m unit

# Integration —Ç–µ—Å—Ç—ã
pytest -m integration

# Performance —Ç–µ—Å—Ç—ã
pytest -m performance

# –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
pytest --cov=src --cov-report=html
```

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
‚îú‚îÄ‚îÄ src/                    # üèóÔ∏è –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
‚îÇ   ‚îú‚îÄ‚îÄ core/              # üîß –û—Å–Ω–æ–≤–Ω—ã–µ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏
‚îÇ   ‚îú‚îÄ‚îÄ config/            # ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ infrastructure/    # üè≠ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
‚îÇ   ‚îú‚îÄ‚îÄ domain/           # üß† –î–æ–º–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ application/      # üé≠ –°–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ presentation/     # üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
‚îú‚îÄ‚îÄ tests/                # üß™ –¢–µ—Å—Ç—ã
‚îú‚îÄ‚îÄ docs/                 # üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îú‚îÄ‚îÄ scripts/              # üîß –£—Ç–∏–ª–∏—Ç—ã
‚îú‚îÄ‚îÄ main.py              # üöÄ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
‚îî‚îÄ‚îÄ requirements.txt     # üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
```

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è

1. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: –í—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ paper trading –ø–µ—Ä–µ–¥ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ–π
2. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å API –∫–ª—é—á–∞–º–∏
3. **–†–∏—Å–∫–∏**: –¢–æ—Ä–≥–æ–≤–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π —Å–≤—è–∑–∞–Ω–∞ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏
4. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥**: –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –∏ –ª–æ–≥–∏

## üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö:
1. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é**: `python main.py --validate`
2. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É**: `python scripts/diagnostic.py`
3. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏**: `tail -f logs/trading_bot.log`

---

**‚ö†Ô∏è Disclaimer**: –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π. –¢–æ—Ä–≥–æ–≤–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π —Å–≤—è–∑–∞–Ω–∞ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏.
'''
        
        readme_file = self.project_root / "README.md"
        readme_file.write_text(readme_content)
        
        # API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        api_docs_content = '''# üì° API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

## –û–±–∑–æ—Ä –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

Bot –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Clean Architecture —Å —á–µ—Ç–∫–∏–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º —Å–ª–æ–µ–≤:

- **Core**: –ë–∞–∑–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –º–æ–¥–µ–ª–∏
- **Infrastructure**: –í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã (API, –ë–î, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
- **Domain**: –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ (—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç)
- **Application**: –°–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- **Presentation**: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

## Core Interfaces

### ExchangeAPI
```python
from abc import ABC, abstractmethod
from decimal import Decimal
from typing import Dict, List, Optional

class ExchangeAPI(ABC):
    @abstractmethod
    async def get_ticker(self, pair: str) -> Dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–∫–µ—Ä–∞ –¥–ª—è –ø–∞—Ä—ã"""
        pass
    
    @abstractmethod
    async def get_balance(self) -> Dict[str, Dict[str, Decimal]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞"""
        pass
    
    @abstractmethod
    async def create_order(self, pair: str, type: str, amount: Decimal, price: Decimal) -> Dict:
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞"""
        pass
```

### TradingStrategy
```python
class TradingStrategy(ABC):
    @abstractmethod
    def analyze(self, market_data: Dict) -> Dict:
        """–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–∞"""
        pass
    
    @abstractmethod
    def should_buy(self, market_data: Dict) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
        pass
    
    @abstractmethod
    def should_sell(self, market_data: Dict) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏"""
        pass
```

## –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏

```python
from src.core.interfaces import TradingStrategy
from decimal import Decimal
from typing import Dict

class MyCustomStrategy(TradingStrategy):
    def __init__(self, threshold: Decimal = Decimal('0.02')):
        self.threshold = threshold
        self.name = "MyCustomStrategy"
    
    def analyze(self, market_data: Dict) -> Dict:
        current_price = market_data.get('last', 0)
        # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–¥–µ—Å—å
        
        return {
            'action': 'hold',  # 'buy', 'sell', 'hold'
            'confidence': 0.5,  # 0.0 - 1.0
            'reason': '–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è'
        }
    
    def should_buy(self, market_data: Dict) -> bool:
        return self.analyze(market_data)['action'] == 'buy'
    
    def should_sell(self, market_data: Dict) -> bool:
        return self.analyze(market_data)['action'] == 'sell'
```

## Events –∏ Hooks

```python
from src.core.events import EventBus

# –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
@event_bus.subscribe('order_created')
def on_order_created(event_data):
    print(f"–°–æ–∑–¥–∞–Ω –æ—Ä–¥–µ—Ä: {event_data['order_id']}")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
event_bus.emit('custom_event', {'data': 'value'})
```

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –º–µ—Ç—Ä–∏–∫–∏

```python
from src.infrastructure.monitoring import MetricsCollector

metrics = MetricsCollector()
metrics.increment('custom_strategy_signals')
metrics.gauge('current_position_size', position_size)
```
'''
        
        api_docs_file = docs_dir / "API.md"
        api_docs_file.write_text(api_docs_content)
    
    def _create_configuration_guide(self):
        """‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        docs_dir = self.project_root / "docs"
        
        config_guide_content = '''# ‚öôÔ∏è –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

## –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

### –§–∞–π–ª .env

```env
# üîê API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EXMO
EXMO_API_KEY=your_api_key_here
EXMO_API_SECRET=your_api_secret_here

# üìä –¢–æ—Ä–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TRADING_PROFILE=balanced        # conservative, balanced, aggressive
TRADING_MODE=paper             # paper, live
TRADING_PAIR=DOGE_EUR          # –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞

# üí∞ –†–∞–∑–º–µ—Ä—ã –ø–æ–∑–∏—Ü–∏–π (%)
POSITION_SIZE_PERCENT=6.0      # –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –æ—Ç –±–∞–ª–∞–Ω—Å–∞
MAX_POSITION_SIZE_PERCENT=50.0 # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
STOP_LOSS_PERCENT=15.0         # –°—Ç–æ–ø-–ª–æ—Å—Å
TAKE_PROFIT_PERCENT=25.0       # –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç

# üéØ DCA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DCA_ENABLED=true               # –í–∫–ª—é—á–∏—Ç—å DCA
DCA_STEP_PERCENT=5.0          # –®–∞–≥ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
DCA_MAX_STEPS=5               # –ú–∞–∫—Å–∏–º—É–º —à–∞–≥–æ–≤
DCA_STEP_MULTIPLIER=1.5       # –ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä —à–∞–≥–∞

# ‚ö†Ô∏è –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
MAX_DAILY_LOSS_PERCENT=10.0    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞
MAX_DRAWDOWN_PERCENT=20.0      # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞
EMERGENCY_STOP_PERCENT=30.0    # –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞

# üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
TELEGRAM_ENABLED=false         # –í–∫–ª—é—á–∏—Ç—å Telegram
TELEGRAM_BOT_TOKEN=           # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TELEGRAM_CHAT_ID=             # ID —á–∞—Ç–∞

# üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
LOG_LEVEL=INFO                # DEBUG, INFO, WARNING, ERROR
UPDATE_INTERVAL=15            # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)
API_TIMEOUT=30               # –¢–∞–π–º–∞—É—Ç API (—Å–µ–∫—É–Ω–¥—ã)
```

## –ü—Ä–æ—Ñ–∏–ª–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏

### Conservative (–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π)
```python
CONSERVATIVE_PROFILE = {
    'position_size_percent': Decimal('4.0'),
    'max_position_size_percent': Decimal('30.0'),
    'stop_loss_percent': Decimal('10.0'),
    'take_profit_percent': Decimal('15.0'),
    'dca': {
        'enabled': True,
        'step_percent': Decimal('3.0'),
        'max_steps': 3,
        'step_multiplier': Decimal('1.2')
    }
}
```

### Balanced (–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
```python
BALANCED_PROFILE = {
    'position_size_percent': Decimal('6.0'),
    'max_position_size_percent': Decimal('50.0'),
    'stop_loss_percent': Decimal('15.0'),
    'take_profit_percent': Decimal('25.0'),
    'dca': {
        'enabled': True,
        'step_percent': Decimal('5.0'),
        'max_steps': 5,
        'step_multiplier': Decimal('1.5')
    }
}
```

### Aggressive (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π)
```python
AGGRESSIVE_PROFILE = {
    'position_size_percent': Decimal('10.0'),
    'max_position_size_percent': Decimal('70.0'),
    'stop_loss_percent': Decimal('20.0'),
    'take_profit_percent': Decimal('35.0'),
    'dca': {
        'enabled': True,
        'step_percent': Decimal('7.0'),
        'max_steps': 7,
        'step_multiplier': Decimal('2.0')
    }
}
```

## –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `config/custom_profile.py`:

```python
from decimal import Decimal

CUSTOM_PROFILE = {
    'name': 'my_custom_profile',
    'description': '–ú–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ—Ä–≥–æ–≤–ª–∏',
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    'position_size_percent': Decimal('8.0'),
    'max_position_size_percent': Decimal('60.0'),
    'stop_loss_percent': Decimal('18.0'),
    'take_profit_percent': Decimal('30.0'),
    
    # DCA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    'dca': {
        'enabled': True,
        'step_percent': Decimal('6.0'),
        'max_steps': 6,
        'step_multiplier': Decimal('1.8')
    },
    
    # –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
    'risk': {
        'max_daily_loss_percent': Decimal('12.0'),
        'max_drawdown_percent': Decimal('25.0'),
        'emergency_stop_percent': Decimal('35.0')
    }
}
```

## –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

–ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é:
```bash
python main.py --validate
```

–ü—Ä–∏–º–µ—Ä –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
```python
def validate_config(config):
    errors = []
    
    # API –∫–ª—é—á–∏
    if not config.exmo_api_key or len(config.exmo_api_key) < 10:
        errors.append("EXMO API key —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
    
    # –†–∞–∑–º–µ—Ä—ã –ø–æ–∑–∏—Ü–∏–π
    if config.position_size_percent <= 0 or config.position_size_percent > 100:
        errors.append("–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–∂–¥—É 0 –∏ 100%")
    
    return errors
```

## –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:

```bash
export EXMO_API_KEY="your_api_key"
export EXMO_API_SECRET="your_api_secret"
export TRADING_PROFILE="balanced"
export TRADING_MODE="live"
```

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

```python
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class ConfigWatcher(FileSystemEventHandler):
    def on_modified(self, event):
        if event.src_path.endswith('.env'):
            print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...")
            reload_config()
```
'''
        
        config_guide_file = docs_dir / "CONFIGURATION.md"
        config_guide_file.write_text(config_guide_content)

if __name__ == "__main__":
    import sys
    migration = Migration(Path("."))
    success = migration.execute()
    sys.exit(0 if success else 1)