import shutil
import sys
from pathlib import Path
from datetime import datetime
import argparse

def list_backups():
    """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤"""
    backup_dir = Path("backup_before_migration")
    if not backup_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return []
    
    backups = []
    for item in backup_dir.iterdir():
        if item.is_file() and item.suffix == '.py':
            backups.append(item)
    
    return sorted(backups)

def restore_file(backup_file, target_file=None):
    """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ –±—ç–∫–∞–ø–∞"""
    if not backup_file.exists():
        print(f"‚ùå –ë—ç–∫–∞–ø —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {backup_file}")
        return False
    
    if target_file is None:
        # –£–±–∏—Ä–∞–µ–º _old –∏–∑ –∏–º–µ–Ω–∏
        target_name = backup_file.name.replace('_old', '')
        target_file = Path(target_name)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
        if target_file.exists():
            backup_name = f"{target_file.name}.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
            shutil.copy2(target_file, backup_name)
            print(f"üì¶ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_name}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
        shutil.copy2(backup_file, target_file)
        print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {target_file}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è {backup_file}: {e}")
        return False

def restore_main_files():
    """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    backup_dir = Path("backup_before_migration")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    restore_map = {
        "main_old.py": "main.py",
        "config_old.py": "config.py",
        "bot_old.py": "bot.py"
    }
    
    restored = 0
    total = len(restore_map)
    
    for backup_name, target_name in restore_map.items():
        backup_file = backup_dir / backup_name
        target_file = Path(target_name)
        
        if backup_file.exists() and restore_file(backup_file, target_file):
            restored += 1
    
    print(f"\nüìä –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {restored}/{total} —Ñ–∞–π–ª–æ–≤")
    
    if restored > 0:
        print("üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: python main.py --validate")
        print("  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ: python main.py --mode paper")
        return True
    else:
        print("‚ö†Ô∏è –§–∞–π–ª—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False

def main():
    parser = argparse.ArgumentParser(description="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞")
    parser.add_argument("--list", action="store_true", help="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤")
    parser.add_argument("--restore-main", action="store_true", help="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã")
    
    args = parser.parse_args()
    
    if args.list:
        print("üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:")
        backups = list_backups()
        for backup in backups:
            print(f"  ‚Ä¢ {backup.name}")
        return 0
    
    if args.restore_main:
        print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
        success = restore_main_files()
        return 0 if success else 1
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    print("üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ò–ó –ë–≠–ö–ê–ü–ê")
    print("=" * 30)
    print("1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤")
    print("3. –í—ã—Ö–æ–¥")
    
    try:
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-3): ")
        
        if choice == "1":
            return 0 if restore_main_files() else 1
        elif choice == "2":
            backups = list_backups()
            for backup in backups:
                print(f"  ‚Ä¢ {backup.name}")
            return 0
        else:
            print("–í—ã—Ö–æ–¥")
            return 0
            
    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return 1

if __name__ == "__main__":
    sys.exit(main())
