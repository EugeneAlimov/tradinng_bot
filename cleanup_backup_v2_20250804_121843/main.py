#!/usr/bin/env python3
"""üöÄ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞ v4.1-refactored"""

import sys
import os
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / "src"))

def main():
    parser = argparse.ArgumentParser(description="–¢–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç DOGE v4.1-refactored")
    parser.add_argument("--mode", choices=["hybrid", "legacy", "new"], 
                       default="hybrid", help="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
    parser.add_argument("--validate", action="store_true", help="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    args = parser.parse_args()
    
    print("üöÄ –¢–û–†–ì–û–í–´–ô –ë–û–¢ DOGE v4.1-refactored")
    print("=" * 40)
    
    if args.validate:
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        try:
            from config.settings import get_settings
            settings = get_settings()
            settings.validate()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
            return
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            sys.exit(1)
    
    if args.mode == "legacy":
        print("üîÑ –ó–∞–ø—É—Å–∫ –≤ legacy —Ä–µ–∂–∏–º–µ...")
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞
            if os.path.exists("main_old.py"):
                exec(open("main_old.py").read())
            else:
                print("‚ùå Legacy —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ legacy —Ä–µ–∂–∏–º–∞: {e}")
    
    elif args.mode == "hybrid":
        print("üîß –ó–∞–ø—É—Å–∫ –≤ –≥–∏–±—Ä–∏–¥–Ω–æ–º —Ä–µ–∂–∏–º–µ...")
        try:
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –±–æ—Ç–∞
            print("‚ö†Ô∏è –ì–∏–±—Ä–∏–¥–Ω—ã–π —Ä–µ–∂–∏–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --mode legacy –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
    
    elif args.mode == "new":
        print("üÜï –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã...")
        try:
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
            print("‚ö†Ô∏è –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --mode legacy –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: {e}")

if __name__ == "__main__":
    main()
