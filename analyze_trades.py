from analytics_system import TradingAnalytics


def quick_analysis():
    analytics = TradingAnalytics()

    print("üîç –ê–ù–ê–õ–ò–ó –°–î–ï–õ–û–ö:")
    print("=" * 40)

    # –ê–Ω–∞–ª–∏–∑ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
    summary = analytics.get_summary_stats(days_back=7)

    if summary.get('trades_performance'):
        metrics = summary['trades_performance']
        print(f"üí∞ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {metrics.get('total_net_profit', 0):.4f} EUR")
        print(f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {metrics.get('win_rate', 0):.1f}%")
        print(f"üìà –ö–æ—ç—Ñ. –®–∞—Ä–ø–∞: {metrics.get('sharpe_ratio', 0):.2f}")
        print(f"‚ö° –°—Ä–µ–¥–Ω. –ø—Ä–∏–±—ã–ª—å: {metrics.get('average_profit_per_trade', 0):.4f} EUR")
        print(f"üèÜ –õ—É—á—à–∞—è —Å–¥–µ–ª–∫–∞: {metrics.get('max_profit', 0):.4f} EUR")
        print(f"üìâ –•—É–¥—à–∞—è —Å–¥–µ–ª–∫–∞: {metrics.get('max_loss', 0):.4f} EUR")
        print(f"‚è∞ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —É–¥–µ—Ä–∂–∞–Ω–∏—è: {metrics.get('average_hold_time_hours', 0):.1f} —á–∞—Å–æ–≤")
    else:
        print("üìù –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if summary.get('recommendations'):
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        for rec in summary['recommendations']:
            print(f"   {rec}")

    # –í—Ä–µ–º—è —Ç–æ—Ä–≥–æ–≤–ª–∏
    if summary.get('time_analysis'):
        time_analysis = summary['time_analysis']
        print(f"\n‚è∞ –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ò:")
        print(f"   üïê –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Å—ã: {time_analysis.get('most_active_hours', [])}")
        print(f"   üí∞ –ü—Ä–∏–±—ã–ª—å–Ω—ã–µ —á–∞—Å—ã: {time_analysis.get('most_profitable_hours', [])}")


if __name__ == "__main__":
    quick_analysis()