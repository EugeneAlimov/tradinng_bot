# config_updated.py - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
import os
from dataclasses import dataclass
from typing import Dict, Any

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å .env —Ñ–∞–π–ª (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ python-dotenv)
try:
    from dotenv import load_dotenv

    load_dotenv()
    print("‚úÖ .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
except ImportError:
    print("‚ÑπÔ∏è  python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
except Exception as e:
    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env: {e}")


@dataclass
class TradingConfig:
    # API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    API_KEY: str = os.getenv('EXMO_API_KEY', '')
    API_SECRET: str = os.getenv('EXMO_API_SECRET', '')
    API_URL: str = 'api.exmo.com'
    API_VERSION: str = 'v1.1'

    # –¢–æ—Ä–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    CURRENCY_1: str = os.getenv('TRADING_PAIR_1', 'DOGE')  # –¢–æ—Ä–≥—É–µ–º–∞—è –≤–∞–ª—é—Ç–∞
    CURRENCY_2: str = os.getenv('TRADING_PAIR_2', 'EUR')  # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞

    # üÜï –ø–æ–ª–µ –¥–ª—è –∞–≤—Ç–æ–∫–æ–º–∏—Å—Å–∏–∏
    AUTO_COMMISSION_RATE: float = 0.003  # –î–µ—Ñ–æ–ª—Ç 0.3%, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ API

    # DCA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    DCA_ENABLED = True
    DCA_MAX_PURCHASES = 7  # –ú–∞–∫—Å–∏–º—É–º 7 –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –¥–Ω–µ
    DCA_PURCHASE_SIZE = 0.08  # 8% –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É
    DCA_MAX_POSITION = 0.56  # –ú–∞–∫—Å–∏–º—É–º 56% –≤ –ø–æ–∑–∏—Ü–∏–∏

    # ü©π –ù–û–í–´–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É–±—ã—Ç–∫–æ–≤
    LOSS_RECOVERY_ENABLED: bool = False  # –í–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    DCA_LOSS_THRESHOLD: float = 0.02  # DCA –¥–æ–∫—É–ø–∫–∞ –ø—Ä–∏ —É–±—ã—Ç–∫–µ >2%
    DCA_MAX_RECOVERY_ATTEMPTS: int = 3  # –ú–∞–∫—Å–∏–º—É–º 3 DCA –¥–æ–∫—É–ø–∫–∏
    EMERGENCY_STOP_LOSS: float = 0.08  # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Å—Ç–æ–ø –ø—Ä–∏ -8%
    TIME_BASED_STOP_HOURS: int = 6  # –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç–æ–ø —á–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤
    MIN_TIME_BETWEEN_DCA_MINUTES: int = 30  # 30 –º–∏–Ω—É—Ç –º–µ–∂–¥—É DCA –¥–æ–∫—É–ø–∫–∞–º–∏
    TRAILING_IN_LOSS_ENABLED: bool = True  # Trailing stop –¥–∞–∂–µ –≤ —É–±—ã—Ç–∫–µ

    # üõ°Ô∏è –°–ú–Ø–ì–ß–ï–ù–ù–û–ï —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏
    MAX_POSITION_SIZE: float = 0.08  # 8% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞
    MAX_DAILY_LOSS: float = 0.02  # 2% –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –ø–æ—Ç–µ—Ä—å –≤ –¥–µ–Ω—å
    STOP_LOSS_PERCENT: float = 0.15  # 15% —Å—Ç–æ–ø-–ª–æ—Å—Å (–±—ã–ª 8%)
    MAX_LOSS_PER_TRADE: float = 0.005  # –ú–∞–∫—Å–∏–º—É–º 0.5% —É–±—ã—Ç–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É

    # –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∑–∏—Ü–∏–π
    MANUAL_DOGE_PRICE: float = float(os.getenv('MANUAL_DOGE_PRICE', '0.0'))

    # üêï DOGE-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    BASE_PROFIT_MARKUP: float = 0.001  # 0.1% –±–∞–∑–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å
    MIN_SPREAD: float = 0.002  # 0.2% –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥
    VOLATILITY_PERIOD: int = 50

    # ‚ö° –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–´–ï —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è DOGE
    ORDER_LIFE_TIME: int = 900  # 15 –º–∏–Ω—É—Ç
    PRICE_CHECK_PERIOD: int = 600  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
    UPDATE_INTERVAL: int = 5  # 5 —Å–µ–∫—É–Ω–¥ –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª

    # üöÄ –ê–î–ê–ü–¢–ò–í–ù–´–ï –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
    ADAPTIVE_INTERVALS = {
        'normal': 8,  # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - 8 —Å–µ–∫—É–Ω–¥
        'position': 6,  # –ï—Å—Ç—å –ø–æ–∑–∏—Ü–∏—è - 6 —Å–µ–∫—É–Ω–¥
        'waiting': 5,  # –û–∂–∏–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ trailing - 5 —Å–µ–∫—É–Ω–¥
        'trailing': 2,  # –ê–∫—Ç–∏–≤–Ω—ã–π trailing stop - 2 —Å–µ–∫—É–Ω–¥—ã
        'emergency': 1,  # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ - 1 —Å–µ–∫—É–Ω–¥–∞
        'recovery': 3  # ü©π –ù–û–í–û–ï: –†–µ–∂–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É–±—ã—Ç–∫–æ–≤ - 3 —Å–µ–∫—É–Ω–¥—ã
    }

    # üéØ DOGE-–°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–¥–µ–ª–æ–∫
    MIN_VOLATILITY_THRESHOLD: float = 0.0002  # 0.02% –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
    MAX_PRICE_DEVIATION: float = 0.003  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –æ—Ä–¥–µ—Ä–∞

    # üí∞ –°–ë–ê–õ–ê–ù–°–ò–†–û–í–ê–ù–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏
    MIN_PROFIT_TO_SELL: float = 0.012  # 1.2% –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
    FAST_PROFIT_THRESHOLD: float = 2.0  # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–¥–∞–∂–∞ –ø—Ä–∏ 2% –ø—Ä–∏–±—ã–ª–∏
    COMMISSION_BUFFER: float = 0.007  # –ë—É—Ñ–µ—Ä –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏

    # üìä –ë–´–°–¢–†–´–ô –∞–Ω–∞–ª–∏–∑ –¥–ª—è DOGE
    MIN_DATA_POINTS: int = 15  # 15 —Ç–æ—á–µ–∫ = 2.5 –º–∏–Ω—É—Ç—ã
    STABLE_MARKET_THRESHOLD: float = 0.001  # –ü–æ—Ä–æ–≥ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞
    MICRO_DIP_THRESHOLD: float = 0.005  # –ü–æ—Ä–æ–≥ –º–∏–∫—Ä–æ–ø–∞–¥–µ–Ω–∏—è 0.5%
    RANGE_POSITION_BUY: float = 0.3  # –ü–æ–∫—É–ø–∞—Ç—å –≤ –Ω–∏–∂–Ω–∏—Ö 30% –¥–∏–∞–ø–∞–∑–æ–Ω–∞

    # üöÄ –í–ö–õ–Æ–ß–ê–ï–ú —É–º–Ω—ã–µ –≤—Ö–æ–¥—ã –Ω–∞ –º–∏–∫—Ä–æ-–ø–∞–¥–µ–Ω–∏—è—Ö
    QUICK_ENTRY_ON_DIP: bool = True  # –í–∫–ª—é—á–µ–Ω–æ –¥–ª—è DOGE
    DIP_THRESHOLD_MINOR: float = 0.003  # –ú–∞–ª–æ–µ –ø–∞–¥–µ–Ω–∏–µ 0.3%
    DIP_THRESHOLD_MAJOR: float = 0.008  # –ë–æ–ª—å—à–æ–µ –ø–∞–¥–µ–Ω–∏–µ 0.8%

    # üí° –£–ú–ù–û–ï —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è DOGE
    AGGRESSIVE_PRICING: bool = True  # –í–∫–ª—é—á–µ–Ω–æ - –Ω—É–∂–Ω–æ –¥–ª—è –º–∏–∫—Ä–æ-—Å–ø—Ä–µ–¥–æ–≤
    MARKET_PRICE_OFFSET: float = 0.001  # –ú–∞–ª–µ–Ω—å–∫–∞—è —Å–∫–∏–¥–∫–∞ –æ—Ç —Ä—ã–Ω–∫–∞
    QUICK_FILL_OFFSET: float = 0.0005  # –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ

    # üîí –í–ê–ñ–ù–´–ï –∑–∞—â–∏—Ç—ã
    MAX_TRADES_PER_HOUR: int = 6  # –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 6 —Å–¥–µ–ª–æ–∫ –≤ —á–∞—Å (–±—ã–ª–æ 4)
    MIN_TIME_BETWEEN_TRADES: int = 300  # 5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏
    POSITION_VALIDATION_ENABLED: bool = True  # –í–∞–∂–Ω–∞—è –∑–∞—â–∏—Ç–∞
    MAX_POSITION_DISCREPANCY: float = 0.15  # üîß –£–í–ï–õ–ò–ß–ï–ù–û –¥–æ 15% (–±—ã–ª–æ 1%)

    # üêï DOGE-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    STAGNATION_PROTECTION: bool = True  # –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏
    MAX_STAGNATION_CYCLES: int = 120  # 120 * 5 —Å–µ–∫ = 10 –º–∏–Ω—É—Ç
    FORCE_TRADE_DISABLED: bool = False  # –í–∫–ª—é—á–∞–µ–º –¥–ª—è DOGE

    # üéØ DOGE-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    ENABLE_MICRO_SCALPING: bool = True  # –í–∫–ª—é—á–∏—Ç—å –º–∏–∫—Ä–æ-—Å–∫–∞–ª—å–ø–∏–Ω–≥
    MICRO_PROFIT_THRESHOLD: float = 0.004  # 0.4% –º–∏–∫—Ä–æ-–ø—Ä–∏–±—ã–ª—å
    DOGE_VOLUME_CHECK: bool = True  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä–µ–º–æ–≤ –¥–ª—è DOGE
    MIN_ORDER_VOLUME_EUR: float = 55  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –æ—Ä–¥–µ—Ä–∞

    # üß† –ù–û–í–´–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Trend Filter
    TREND_FILTER_ENABLED: bool = True                    # –í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä —Ç—Ä–µ–Ω–¥–æ–≤
    TREND_BEARISH_THRESHOLD_4H: float = -0.08           # -8% –∑–∞ 4—á = —Å–∏–ª—å–Ω—ã–π –º–µ–¥–≤–µ–¥—å
    TREND_BEARISH_THRESHOLD_1H: float = -0.04           # -4% –∑–∞ 1—á = –º–µ–¥–≤–µ–¥—å
    TREND_DCA_DISABLE_THRESHOLD: float = -0.05          # –û—Ç–∫–ª—é—á–∞—Ç—å DCA –ø—Ä–∏ -5% –∑–∞ 4—á
    TREND_BUY_DISABLE_THRESHOLD: float = -0.10          # –û—Ç–∫–ª—é—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –ø—Ä–∏ -10% –∑–∞ 4—á
    TREND_HIGH_VOLATILITY_THRESHOLD: float = 0.05       # 5% –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å = –≤—ã—Å–æ–∫–∞—è
    TREND_CONFIDENCE_MIN: float = 0.6                   # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è —Ä–µ—à–µ–Ω–∏–π

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    LOG_LEVEL: str = 'INFO'
    LOG_FILE: str = 'trading_bot_recovery.log'  # ü©π –ù–û–í–û–ï –∏–º—è –ª–æ–≥–∞

    def __post_init__(self):
        """üßÆ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–±—ã–ª—å –±–æ–ª—å—à–µ –∫–æ–º–∏—Å—Å–∏–π
        total_commission = self.AUTO_COMMISSION_RATE * 2  # –ü–æ–∫—É–ø–∫–∞ + –ø—Ä–æ–¥–∞–∂–∞

        if self.BASE_PROFIT_MARKUP <= total_commission:
            print(
                f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–∏–±—ã–ª—å {self.BASE_PROFIT_MARKUP * 100:.1f}% ‚â§ –∫–æ–º–∏—Å—Å–∏–π {total_commission * 100:.1f}%")
            print(f"üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–æ {(total_commission + 0.001) * 100:.1f}%")
            self.BASE_PROFIT_MARKUP = total_commission + 0.001

        # ü©π –ù–û–í–´–ï –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        if self.LOSS_RECOVERY_ENABLED:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ—Ä–æ–≥–æ–≤ —É–±—ã—Ç–∫–æ–≤
            if self.DCA_LOSS_THRESHOLD >= self.EMERGENCY_STOP_LOSS:
                print(
                    f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: DCA –ø–æ—Ä–æ–≥ {self.DCA_LOSS_THRESHOLD * 100:.0f}% >= —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ø–∞ {self.EMERGENCY_STOP_LOSS * 100:.0f}%")
                self.DCA_LOSS_THRESHOLD = self.EMERGENCY_STOP_LOSS * 0.5
                print(f"üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º DCA –ø–æ—Ä–æ–≥ –¥–æ {self.DCA_LOSS_THRESHOLD * 100:.0f}%")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –∑–∞–ø–∞—Å –¥–ª—è DCA
            max_dca_risk = self.DCA_LOSS_THRESHOLD * self.DCA_MAX_RECOVERY_ATTEMPTS
            if max_dca_risk > self.EMERGENCY_STOP_LOSS * 0.8:
                print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°—É–º–º–∞—Ä–Ω—ã–π DCA —Ä–∏—Å–∫ {max_dca_risk * 100:.0f}% —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–æ–∫ –∫ —Å—Ç–æ–ø-–ª–æ—Å—Å—É")

        print(f"üêï DOGE-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –° –°–ò–°–¢–ï–ú–û–ô –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:")
        print(f"   üí∞ –ü—Ä–∏–±—ã–ª—å –Ω–∞ —Å–¥–µ–ª–∫—É: {self.BASE_PROFIT_MARKUP * 100:.1f}%")
        print(f"   üéØ –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: {self.MAX_POSITION_SIZE * 100:.0f}%")
        print(f"   ‚ö° –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {self.UPDATE_INTERVAL} —Å–µ–∫")
        print(f"   üåä –ú–∏–Ω. –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {self.MIN_VOLATILITY_THRESHOLD * 100:.2f}%")
        print(f"   üìä –¢–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö: {self.MIN_DATA_POINTS}")
        print(f"   üíé –ú–∏–Ω. –ø—Ä–∏–±—ã–ª—å –ø—Ä–æ–¥–∞–∂–∏: {self.MIN_PROFIT_TO_SELL * 100:.1f}%")

        # ü©π –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        if self.LOSS_RECOVERY_ENABLED:
            print(f"   ü©π –°–ò–°–¢–ï–ú–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:")
            print(f"      DCA –ø—Ä–∏ —É–±—ã—Ç–∫–µ: >{self.DCA_LOSS_THRESHOLD * 100:.0f}%")
            print(f"      –ú–∞–∫—Å–∏–º—É–º DCA: {self.DCA_MAX_RECOVERY_ATTEMPTS}")
            print(f"      –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Å—Ç–æ–ø: {self.EMERGENCY_STOP_LOSS * 100:.0f}%")
            print(f"      –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç–æ–ø: {self.TIME_BASED_STOP_HOURS} —á–∞—Å–æ–≤")
            print(f"      –ò–Ω—Ç–µ—Ä–≤–∞–ª DCA: {self.MIN_TIME_BETWEEN_DCA_MINUTES} –º–∏–Ω—É—Ç")

        # –†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏
        net_profit = self.BASE_PROFIT_MARKUP - total_commission
        print(f"   üìà –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å —Å —Å–¥–µ–ª–∫–∏: {net_profit * 100:.2f}%")

        if net_profit <= 0:
            print(f"üö® –û–®–ò–ë–ö–ê: –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å! –£–≤–µ–ª–∏—á—å—Ç–µ BASE_PROFIT_MARKUP")
        elif net_profit < 0.001:
            print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∞—è –ø—Ä–∏–±—ã–ª—å, –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫")
        else:
            print(f"‚úÖ –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Å–¥–µ–ª–∫–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ DOGE-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        if self.MIN_VOLATILITY_THRESHOLD <= 0.0002:
            print(f"üêï –û—Ç–ª–∏—á–Ω–æ! –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è DOGE –º–∏–∫—Ä–æ-–¥–≤–∏–∂–µ–Ω–∏–π")
        elif self.MIN_VOLATILITY_THRESHOLD <= 0.001:
            print(f"üêï –•–æ—Ä–æ—à–æ! –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è DOGE —Ç–æ—Ä–≥–æ–≤–ª–∏")
        else:
            print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–≥—É—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å DOGE –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")

        # ü©π –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º
        self._validate_system_compatibility()

    def _validate_system_compatibility(self):
        """üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º"""

        issues = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å DCA –∏ recovery
        if self.DCA_ENABLED and self.LOSS_RECOVERY_ENABLED:
            if self.DCA_MAX_PURCHASES * self.DCA_PURCHASE_SIZE > self.DCA_MAX_POSITION:
                issues.append("DCA: –ú–∞–∫—Å–∏–º—É–º –ø–æ–∫—É–ø–æ–∫ * —Ä–∞–∑–º–µ—Ä > –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        if 'recovery' not in self.ADAPTIVE_INTERVALS:
            self.ADAPTIVE_INTERVALS['recovery'] = 3
            issues.append("–î–æ–±–∞–≤–ª–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª 'recovery'")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
        max_trades_per_day = self.MAX_TRADES_PER_HOUR * 24
        max_dca_trades = self.DCA_MAX_PURCHASES + self.DCA_MAX_RECOVERY_ATTEMPTS

        if max_dca_trades > max_trades_per_day * 0.5:
            issues.append(f"DCA+Recovery –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å {max_dca_trades} —Å–¥–µ–ª–æ–∫, —á—Ç–æ –º–Ω–æ–≥–æ –¥–ª—è –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞")

        # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        if issues:
            print(f"‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò:")
            for issue in issues:
                print(f"   ‚Ä¢ {issue}")
        else:
            print(f"‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º—ã")

    def get_recovery_settings(self) -> Dict[str, Any]:
        """ü©π –ù–û–í–´–ô –ú–ï–¢–û–î: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        return {
            'enabled': self.LOSS_RECOVERY_ENABLED,
            'dca_loss_threshold': self.DCA_LOSS_THRESHOLD,
            'dca_max_attempts': self.DCA_MAX_RECOVERY_ATTEMPTS,
            'emergency_stop_loss': self.EMERGENCY_STOP_LOSS,
            'time_based_stop_hours': self.TIME_BASED_STOP_HOURS,
            'min_time_between_dca_minutes': self.MIN_TIME_BETWEEN_DCA_MINUTES,
            'trailing_in_loss_enabled': self.TRAILING_IN_LOSS_ENABLED
        }

    def get_doge_optimizations(self) -> Dict[str, Any]:
        """üêï –ü–æ–ª—É—á–µ–Ω–∏–µ DOGE-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π"""
        return {
            'min_volatility_threshold': self.MIN_VOLATILITY_THRESHOLD,
            'enable_micro_scalping': self.ENABLE_MICRO_SCALPING,
            'micro_profit_threshold': self.MICRO_PROFIT_THRESHOLD,
            'quick_entry_on_dip': self.QUICK_ENTRY_ON_DIP,
            'aggressive_pricing': self.AGGRESSIVE_PRICING,
            'adaptive_intervals': self.ADAPTIVE_INTERVALS
        }

    def update_for_paper_trading(self):
        """üìù –ù–û–í–´–ô –ú–ï–¢–û–î: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        print("üìù –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (paper trading)")

        # –£—Å–∫–æ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        self.UPDATE_INTERVAL = 1  # 1 —Å–µ–∫—É–Ω–¥–∞
        self.MIN_TIME_BETWEEN_TRADES = 60  # 1 –º–∏–Ω—É—Ç–∞ –º–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏
        self.MIN_TIME_BETWEEN_DCA_MINUTES = 5  # 5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É DCA
        self.TIME_BASED_STOP_HOURS = 1  # 1 —á–∞—Å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ø–∞

        # –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.DCA_LOSS_THRESHOLD = 0.01  # 1% –≤–º–µ—Å—Ç–æ 2%
        self.EMERGENCY_STOP_LOSS = 0.05  # 5% –≤–º–µ—Å—Ç–æ 8%

        # –£—Å–∫–æ—Ä—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        for mode in self.ADAPTIVE_INTERVALS:
            self.ADAPTIVE_INTERVALS[mode] = max(1, self.ADAPTIVE_INTERVALS[mode] // 2)

        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

    def update_for_conservative_mode(self):
        """üõ°Ô∏è –ù–û–í–´–ô –ú–ï–¢–û–î: –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print("üõ°Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        self.MAX_POSITION_SIZE = 0.05  # 5% –≤–º–µ—Å—Ç–æ 8%
        self.DCA_LOSS_THRESHOLD = 0.03  # 3% –≤–º–µ—Å—Ç–æ 2%
        self.DCA_MAX_RECOVERY_ATTEMPTS = 2  # 2 –≤–º–µ—Å—Ç–æ 3
        self.EMERGENCY_STOP_LOSS = 0.06  # 6% –≤–º–µ—Å—Ç–æ 8%

        # –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–∏–±—ã–ª–∏
        self.MIN_PROFIT_TO_SELL = 0.015  # 1.5% –≤–º–µ—Å—Ç–æ 1.2%
        self.BASE_PROFIT_MARKUP = 0.002  # 0.2% –≤–º–µ—Å—Ç–æ 0.1%

        # –ó–∞–º–µ–¥–ª—è–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é
        self.MIN_TIME_BETWEEN_TRADES = 600  # 10 –º–∏–Ω—É—Ç
        self.MIN_TIME_BETWEEN_DCA_MINUTES = 60  # 1 —á–∞—Å –º–µ–∂–¥—É DCA

        print("‚úÖ –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

    def update_for_aggressive_mode(self):
        """üöÄ –ù–û–í–´–ô –ú–ï–¢–û–î: –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print("üöÄ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        self.MAX_POSITION_SIZE = 0.12  # 12% –≤–º–µ—Å—Ç–æ 8%
        self.DCA_LOSS_THRESHOLD = 0.015  # 1.5% –≤–º–µ—Å—Ç–æ 2%
        self.DCA_MAX_RECOVERY_ATTEMPTS = 4  # 4 –≤–º–µ—Å—Ç–æ 3
        self.MAX_TRADES_PER_HOUR = 8  # 8 –≤–º–µ—Å—Ç–æ 6

        # –ë–æ–ª–µ–µ –Ω–∏–∑–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–∏–±—ã–ª–∏
        self.MIN_PROFIT_TO_SELL = 0.008  # 0.8% –≤–º–µ—Å—Ç–æ 1.2%

        # –£—Å–∫–æ—Ä—è–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é
        self.MIN_TIME_BETWEEN_TRADES = 180  # 3 –º–∏–Ω—É—Ç—ã
        self.MIN_TIME_BETWEEN_DCA_MINUTES = 15  # 15 –º–∏–Ω—É—Ç –º–µ–∂–¥—É DCA

        # –£—Å–∫–æ—Ä—è–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        for mode in self.ADAPTIVE_INTERVALS:
            self.ADAPTIVE_INTERVALS[mode] = max(1, int(self.ADAPTIVE_INTERVALS[mode] * 0.7))

        print("‚úÖ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

    def print_current_settings(self):
        """üìä –ù–û–í–´–ô –ú–ï–¢–û–î: –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        print("\nüìä –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê:")
        print("=" * 50)

        print("üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        print(f"   –ü–∞—Ä–∞: {self.CURRENCY_1}_{self.CURRENCY_2}")
        print(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: {self.MAX_POSITION_SIZE * 100:.0f}%")
        print(f"   –ë–∞–∑–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å: {self.BASE_PROFIT_MARKUP * 100:.2f}%")
        print(f"   –ú–∏–Ω. –ø—Ä–∏–±—ã–ª—å –ø—Ä–æ–¥–∞–∂–∏: {self.MIN_PROFIT_TO_SELL * 100:.1f}%")
        print(f"   –ö–æ–º–∏—Å—Å–∏—è: {self.AUTO_COMMISSION_RATE * 100:.1f}%")

        print("\nü©π –°–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   –í–∫–ª—é—á–µ–Ω–∞: {'–î–ê' if self.LOSS_RECOVERY_ENABLED else '–ù–ï–¢'}")
        if self.LOSS_RECOVERY_ENABLED:
            print(f"   DCA –ø—Ä–∏ —É–±—ã—Ç–∫–µ: >{self.DCA_LOSS_THRESHOLD * 100:.0f}%")
            print(f"   –ú–∞–∫—Å–∏–º—É–º DCA: {self.DCA_MAX_RECOVERY_ATTEMPTS}")
            print(f"   –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Å—Ç–æ–ø: {self.EMERGENCY_STOP_LOSS * 100:.0f}%")
            print(f"   –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç–æ–ø: {self.TIME_BASED_STOP_HOURS} —á")

        print("\n‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ç–æ—Ä–≥–æ–≤–ª–∏:")
        print(f"   –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {self.UPDATE_INTERVAL} —Å–µ–∫")
        print(f"   –ú–µ–∂–¥—É —Å–¥–µ–ª–∫–∞–º–∏: {self.MIN_TIME_BETWEEN_TRADES // 60} –º–∏–Ω")
        print(f"   –ú–µ–∂–¥—É DCA: {self.MIN_TIME_BETWEEN_DCA_MINUTES} –º–∏–Ω")
        print(f"   –ú–∞–∫—Å. —Å–¥–µ–ª–æ–∫/—á–∞—Å: {self.MAX_TRADES_PER_HOUR}")

        print("\nüõ°Ô∏è –ó–∞—â–∏—Ç—ã:")
        print(f"   –°—Ç–æ–ø-–ª–æ—Å—Å: {self.STOP_LOSS_PERCENT * 100:.0f}%")
        print(f"   –ú–∞–∫—Å. –¥–Ω–µ–≤–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏: {self.MAX_DAILY_LOSS * 100:.0f}%")
        print(f"   –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–π: {'–í–ö–õ' if self.POSITION_VALIDATION_ENABLED else '–í–´–ö–õ'}")
        print(f"   –ú–∞–∫—Å. —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {self.MAX_POSITION_DISCREPANCY * 100:.0f}%")

        print("\nüêï DOGE –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:")
        print(f"   –ú–∏–Ω. –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {self.MIN_VOLATILITY_THRESHOLD * 100:.2f}%")
        print(f"   –ú–∏–∫—Ä–æ-—Å–∫–∞–ª—å–ø–∏–Ω–≥: {'–í–ö–õ' if self.ENABLE_MICRO_SCALPING else '–í–´–ö–õ'}")
        print(f"   –ë—ã—Å—Ç—Ä—ã–µ –≤—Ö–æ–¥—ã: {'–í–ö–õ' if self.QUICK_ENTRY_ON_DIP else '–í–´–ö–õ'}")
        print(f"   –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ü–µ–Ω—ã: {'–í–ö–õ' if self.AGGRESSIVE_PRICING else '–í–´–ö–õ'}")


# üîß –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
def create_test_config() -> TradingConfig:
    """üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config = TradingConfig()
    config.update_for_paper_trading()
    return config


def create_conservative_config() -> TradingConfig:
    """üõ°Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config = TradingConfig()
    config.update_for_conservative_mode()
    return config


def create_aggressive_config() -> TradingConfig:
    """üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config = TradingConfig()
    config.update_for_aggressive_mode()
    return config


def compare_configs():
    """üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
    print("üìä –°–†–ê–í–ù–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô")
    print("=" * 60)

    configs = {
        "–û–±—ã—á–Ω–∞—è": TradingConfig(),
        "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è": create_conservative_config(),
        "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è": create_aggressive_config(),
        "–¢–µ—Å—Ç–æ–≤–∞—è": create_test_config()
    }

    metrics = [
        ("–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏", "MAX_POSITION_SIZE", "%"),
        ("DCA –ø–æ—Ä–æ–≥", "DCA_LOSS_THRESHOLD", "%"),
        ("–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Å—Ç–æ–ø", "EMERGENCY_STOP_LOSS", "%"),
        ("–ú–∏–Ω. –ø—Ä–∏–±—ã–ª—å", "MIN_PROFIT_TO_SELL", "%"),
        ("–ò–Ω—Ç–µ—Ä–≤–∞–ª", "UPDATE_INTERVAL", "—Å–µ–∫"),
        ("DCA –ø–æ–ø—ã—Ç–æ–∫", "DCA_MAX_RECOVERY_ATTEMPTS", "—à—Ç")
    ]

    print(f"{'–ú–µ—Ç—Ä–∏–∫–∞':<20} {'–û–±—ã—á–Ω–∞—è':<12} {'–ö–æ–Ω—Å–µ—Ä–≤':<12} {'–ê–≥—Ä–µ—Å—Å':<12} {'–¢–µ—Å—Ç':<12}")
    print("-" * 60)

    for metric_name, attr_name, unit in metrics:
        row = f"{metric_name:<20}"
        for config_name, config in configs.items():
            value = getattr(config, attr_name, 0)
            if unit == "%":
                formatted = f"{value * 100:.1f}%"
            elif unit == "—Å–µ–∫":
                formatted = f"{value}—Å–µ–∫"
            else:
                formatted = f"{value}{unit}"
            row += f" {formatted:<12}"
        print(row)


if __name__ == "__main__":
    print("‚öôÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–û–†–ì–û–í–û–ì–û –ë–û–¢–ê –° –°–ò–°–¢–ï–ú–û–ô –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø")
    print("=" * 60)

    # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = TradingConfig()
    config.print_current_settings()

    print(f"\nüîß –î–û–°–¢–£–ü–ù–´–ï –†–ï–ñ–ò–ú–´:")
    print(f"   üìù –¢–µ—Å—Ç–æ–≤—ã–π: create_test_config()")
    print(f"   üõ°Ô∏è –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π: create_conservative_config()")
    print(f"   üöÄ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π: create_aggressive_config()")

    print(f"\nüìä –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: compare_configs()")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    recovery_settings = config.get_recovery_settings()
    print(f"\nü©π –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:")
    for key, value in recovery_settings.items():
        if isinstance(value, float) and 0 < value < 1:
            print(f"   {key}: {value * 100:.1f}%")
        elif isinstance(value, bool):
    # üîá –ù–ê–°–¢–†–û–ô–ö–ò –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
    QUIET_MODE: bool = True
    LOG_ONLY_EVENTS: bool = True
    AGGREGATE_RATE_LIMITS: bool = True
    LOG_PRICE_CHANGES_THRESHOLD: float = 0.005
    LOG_PNL_CHANGES_THRESHOLD: float = 0.01

    # üìä –ù–ê–°–¢–†–û–ô–ö–ò –ê–ù–ê–õ–ò–ó–ê –¢–†–ï–ù–î–û–í
    ENABLE_TREND_ANALYSIS: bool = True
    TREND_DATA_RETENTION_DAYS: int = 30
    TREND_UPDATE_INTERVAL_MINUTES: int = 10

    # üéØ –ù–ê–°–¢–†–û–ô–ö–ò –ß–ê–°–¢–ò–ß–ù–û–ô –¢–û–†–ì–û–í–õ–ò
    ENABLE_PARTIAL_TRADING: bool = True
    PARTIAL_MIN_LAYER_PROFIT: float = 0.012
    PARTIAL_MAX_HOLD_DAYS: int = 7
    PARTIAL_LAYER_TOLERANCE: float = 0.02

            print(f"   {key}: {'–í–ö–õ' if value else '–í–´–ö–õ'}")
        else:
            print(f"   {key}: {value}")