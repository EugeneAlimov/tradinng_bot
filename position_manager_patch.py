
# –î–û–ë–ê–í–ò–¢–¨ –í –ö–û–ù–ï–¶ position_manager.py

def apply_position_manager_fix(self):
    """üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫ position_manager"""

    original_method = self.get_accurate_position_data

    def improved_get_accurate_position_data(currency: str):
        """üìä –£–õ–£–ß–®–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            result = original_method(currency)

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω—ã –¥–ª—è DOGE
            if result.get('avg_price', 0) <= 0 or result.get('avg_price', 0) > 1.0:
                self.logger.warning(f"‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {result.get('avg_price', 0):.8f}")
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—É—é –æ—Ü–µ–Ω–∫—É
                estimated_price = self._estimate_avg_price(currency)
                if estimated_price and 0.10 < estimated_price < 0.30:
                    result['avg_price'] = estimated_price
                    self.logger.info(f"üîß –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞: {estimated_price:.8f}")
                else:
                    result['avg_price'] = 0.19  # –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è DOGE
                    self.logger.info(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—É—é –æ—Ü–µ–Ω–∫—É: 0.19")

            return result

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —É–ª—É—á—à–µ–Ω–Ω–æ–º –º–µ—Ç–æ–¥–µ: {e}")
            return original_method(currency)

    # –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥
    self.get_accurate_position_data = improved_get_accurate_position_data
    self.logger.info("üîß –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è position_manager")

# –î–æ–±–∞–≤–∏—Ç—å –≤ __init__ –º–µ—Ç–æ–¥ position_manager:
# self.apply_position_manager_fix()
