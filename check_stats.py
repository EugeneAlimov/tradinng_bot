import json
import os
from datetime import datetime


def check_current_stats():
    today = datetime.now().strftime('%Y%m%d')
    stats_file = f'data/analytics/runtime_stats_{today}.json'

    if not os.path.exists(stats_file):
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—â–µ –Ω–µ —Å–æ–±—Ä–∞–Ω–∞")
        return

    print("üìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 40)

    with open(stats_file, 'r') as f:
        lines = f.readlines()

    if lines:
        # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
        latest = json.loads(lines[-1])

        print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {latest.get('uptime_hours', 0):.1f} —á–∞—Å–æ–≤")
        print(f"üîÑ –¶–∏–∫–ª–æ–≤: {latest.get('cycles_completed', 0)}")
        print(f"üìà –°–¥–µ–ª–æ–∫: {latest.get('total_trades', 0)}")
        print(f"üí∞ –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {latest.get('profitable_trades', 0)}")
        print(f"üí∏ –î–Ω–µ–≤–Ω–æ–π P&L: {latest.get('daily_pnl', 0):+.4f} EUR")
        print(f"‚ùå –û—à–∏–±–æ–∫: {latest.get('error_count', 0)}")
        print(f"‚ö° –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ü–∏–∫–ª–∞: {latest.get('avg_cycle_time', 0):.2f}—Å")

        if latest.get('total_trades', 0) > 0:
            win_rate = (latest.get('profitable_trades', 0) / latest.get('total_trades', 1)) * 100
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {win_rate:.1f}%")

        # –ü–æ–∑–∏—Ü–∏–∏
        positions = latest.get('positions', {})
        if positions:
            print(f"\nüíé –ü–û–ó–ò–¶–ò–ò:")
            for currency, pos_data in positions.items():
                print(f"   {currency}: {pos_data.get('quantity', 0):.6f} –ø–æ {pos_data.get('avg_price', 0):.6f}")

    print(f"\nüìù –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {len(lines)}")


if __name__ == "__main__":
    check_current_stats()