#!/usr/bin/env python3
"""üß™ –¢–µ—Å—Ç—ã –∞–¥–∞–ø—Ç–µ—Ä–æ–≤"""

import pytest
import sys
from pathlib import Path

src_path = Path(__file__).parent.parent / "src"
sys.path.insert(0, str(src_path))

@pytest.mark.integration
def test_legacy_bot_adapter():
    """–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–µ—Ä–∞ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞"""
    try:
        from adapters import LegacyBotAdapter

        adapter = LegacyBotAdapter(use_hybrid=False)
        assert adapter is not None

        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ä—ã–π –±–æ—Ç
        old_bot = adapter.get_old_bot()

        # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if old_bot:
            assert hasattr(old_bot, '__class__')

    except ImportError as e:
        pytest.skip(f"–ê–¥–∞–ø—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

@pytest.mark.integration  
def test_strategy_adapter():
    """–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–µ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
    try:
        from adapters import StrategyAdapter

        adapter = StrategyAdapter()
        assert adapter is not None

        adapter.load_old_strategies()

    except ImportError:
        pytest.skip("–ê–¥–∞–ø—Ç–µ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
